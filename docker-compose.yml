version: '3'

services:
  web:
    build: .
    command: bash -c "python manage.py migrate --noinput && gunicorn sitechecker.wsgi --bind :8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - nginx_network
      - db_network


  celery_check_worker:
    build: .
    command: bash -c 'celery -A sitechecker worker -l info -Q check_queue'
    environment:
      - C_FORCE_ROOT=true
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - db_network

  celery_alert_worker:
    build: .
    command: bash -c 'celery -A sitechecker worker -l info -Q alert_queue'
    environment:
      - C_FORCE_ROOT=true
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - db_network


  celery-beat:
    build: .
    command: celery -A sitechecker beat -l info
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - db_network

  db:
    image: postgres:12.2
    env_file:
      - ./database.env
    restart: on-failure
    networks:
      - db_network

  redis:
    image: "redis:latest"
    ports:
      - '6379:6379'
    networks:
      - db_network

  nginx:
    image: nginx:latest
    env_file:
      - ./.env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - db
    ports:
      - "4000:4000"
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
